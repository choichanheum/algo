# 다이나믹 프로그래밍 예제 8-3. 개미 전사 (실전)
# 개미 전사가 메뚜기 마을의 식량 창고를 몰래 공격하려고 한다. 식량 창고 N개에 대한 정보가 주어졌을 때 얻을 수 있는 식량의 최댓값을 구하라.
# 메뚜기 정찰병은 일직선상에 존재하는 식량창고 중에서 서로 인접한 식량창고가 공격받으면 바로 알아챌 수 있기 때문에, 개미 전사는 최소 한 칸 이상 떨어진 식량창고를 약탈해야 한다.

'''
입력값
4
1 3 1 5

출력값
8

'''

# 정수 N 을 입력받기
n = int(input())

# 모든 식량 정보 입력받기
array = list(map(int, input().split()))

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 101

# 다이나믹 프로그래밍(Dynamic Programming) 진행 (보텀업)
d[0] = array[0]
d[1] = max(array[0], array[1])

for i in range(2, n):
    d[i] = max(d[i-1], d[i-2]+array[i])

# 계산된 결과 출력
print(d[n-1])